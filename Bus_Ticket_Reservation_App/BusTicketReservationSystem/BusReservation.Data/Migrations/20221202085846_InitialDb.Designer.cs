// <auto-generated />
using System;
using BusReservation.Data.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusReservation.Data.Migrations
{
    [DbContext(typeof(MyAppContext))]
    [Migration("20221202085846_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("BusReservation.Entity.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusName")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalSeats")
                        .HasColumnType("INTEGER");

                    b.HasKey("BusId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            BusId = 1,
                            BusName = "MAN",
                            TotalSeats = 20
                        },
                        new
                        {
                            BusId = 2,
                            BusName = "Volvo",
                            TotalSeats = 30
                        },
                        new
                        {
                            BusId = 3,
                            BusName = "Mercedes",
                            TotalSeats = 40
                        });
                });

            modelBuilder.Entity("BusReservation.Entity.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Istanbul"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Belgrade"
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Berlin"
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Amsterdam"
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Paris"
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Madrid"
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "Vienna"
                        });
                });

            modelBuilder.Entity("BusReservation.Entity.Passenger", b =>
                {
                    b.Property<int>("PassengerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Lname")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("PassengerId");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            PassengerId = 1,
                            Email = "berkgonencc@gmail.com",
                            Fname = "Berk",
                            Lname = "Gonenc",
                            PhoneNumber = "5309999999"
                        },
                        new
                        {
                            PassengerId = 2,
                            Email = "ipksml@gmail.com",
                            Fname = "Ipek",
                            Lname = "Gonenc",
                            PhoneNumber = "5319999999"
                        },
                        new
                        {
                            PassengerId = 3,
                            Email = "ipksml@gmail.com",
                            Fname = "Kunta",
                            Lname = "Gonenc",
                            PhoneNumber = "5319999999"
                        },
                        new
                        {
                            PassengerId = 4,
                            Email = "hkntmn@gmail.com",
                            Fname = "Hakan",
                            Lname = "Ataman",
                            PhoneNumber = "5329999999"
                        },
                        new
                        {
                            PassengerId = 5,
                            Email = "cnbk@gmail.com",
                            Fname = "Canberk",
                            Lname = "Bulut",
                            PhoneNumber = "5339999999"
                        });
                });

            modelBuilder.Entity("BusReservation.Entity.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PassengerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeatNo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TripId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TicketId");

                    b.HasIndex("PassengerId");

                    b.HasIndex("TripId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            PassengerId = 1,
                            SeatNo = 3,
                            TripId = 1
                        },
                        new
                        {
                            TicketId = 2,
                            PassengerId = 2,
                            SeatNo = 4,
                            TripId = 1
                        },
                        new
                        {
                            TicketId = 3,
                            PassengerId = 3,
                            SeatNo = 5,
                            TripId = 2
                        },
                        new
                        {
                            TicketId = 4,
                            PassengerId = 4,
                            SeatNo = 6,
                            TripId = 3
                        },
                        new
                        {
                            TicketId = 5,
                            PassengerId = 5,
                            SeatNo = 7,
                            TripId = 4
                        });
                });

            modelBuilder.Entity("BusReservation.Entity.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArrivalCityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartureCityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("EstimatedTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReservationDate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("TicketPrice")
                        .HasColumnType("REAL");

                    b.HasKey("TripId");

                    b.HasIndex("ArrivalCityId");

                    b.HasIndex("BusId");

                    b.HasIndex("DepartureCityId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            TripId = 1,
                            ArrivalCityId = 2,
                            BusId = 1,
                            DepartureCityId = 1,
                            DepartureTime = "12:00",
                            EstimatedTime = "11:00",
                            ReservationDate = "2023-08-20",
                            TicketPrice = 300.0
                        },
                        new
                        {
                            TripId = 2,
                            ArrivalCityId = 2,
                            BusId = 2,
                            DepartureCityId = 1,
                            DepartureTime = "14:00",
                            EstimatedTime = "11:00",
                            ReservationDate = "2023-08-20",
                            TicketPrice = 300.0
                        },
                        new
                        {
                            TripId = 3,
                            ArrivalCityId = 2,
                            BusId = 3,
                            DepartureCityId = 1,
                            DepartureTime = "16:00",
                            EstimatedTime = "11:00",
                            ReservationDate = "2023-08-20",
                            TicketPrice = 400.0
                        },
                        new
                        {
                            TripId = 4,
                            ArrivalCityId = 2,
                            BusId = 2,
                            DepartureCityId = 1,
                            DepartureTime = "18:00",
                            EstimatedTime = "11:00",
                            ReservationDate = "2023-08-20",
                            TicketPrice = 600.0
                        },
                        new
                        {
                            TripId = 5,
                            ArrivalCityId = 2,
                            BusId = 1,
                            DepartureCityId = 1,
                            DepartureTime = "20:00",
                            EstimatedTime = "11:00",
                            ReservationDate = "2023-08-20",
                            TicketPrice = 600.0
                        });
                });

            modelBuilder.Entity("BusReservation.Entity.Ticket", b =>
                {
                    b.HasOne("BusReservation.Entity.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusReservation.Entity.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("BusReservation.Entity.Trip", b =>
                {
                    b.HasOne("BusReservation.Entity.City", "ArrivalCity")
                        .WithMany()
                        .HasForeignKey("ArrivalCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusReservation.Entity.Bus", "Bus")
                        .WithMany("Trips")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusReservation.Entity.City", "DepartureCity")
                        .WithMany()
                        .HasForeignKey("DepartureCityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArrivalCity");

                    b.Navigation("Bus");

                    b.Navigation("DepartureCity");
                });

            modelBuilder.Entity("BusReservation.Entity.Bus", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("BusReservation.Entity.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusReservation.Entity.Trip", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
